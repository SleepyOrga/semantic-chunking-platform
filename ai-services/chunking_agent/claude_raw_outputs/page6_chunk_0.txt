[
{
"section_title": "Document Header and Title",
"content": "GvF This CVPR paper is the Open Access version, provided by the Computer Vision Foundation. Except for this watermark, it is identical to the version available on IEEE Xplore. # Deep Residual Learning for Image Recognition Kaiming He Xiangyu Zhan Shaoqing Ren Microsoft Research $\\{kahe, v-xiangz, v-shren, jiansun\\}@microsoft.com$",
"tags": ["header", "title", "authors", "affiliation", "contact"]
},
{
"section_title": "Abstract",
"content": "Deeper neural networks are more difficult to train. We present a residual learning framework to ease the training of networks that are substantially deeper than those used previously. We explicitly reformulate the layers as learning residual functions with reference to the layer inputs, instead of learning unprecedented functions. We provide comprehensive empirical evidence showing that these residual networks are easier to optimize, and can gain accuracy from considerably increased depth. On the ImageNet dataset we evaluate $8\\times$ residual nets with a depth of up to 152 layers â€” $8\\times$ deeper than VGG nets [40] but still having lower complexity. An ensemble of these residual nets achieves 3.57 % error on the ImageNet test set. This result won the 1st place on the ILSVRC 2015 classification task. We also present analysis on CIFAR-10 with 100 and 1000 layers. The depth of representations is of central importance for many visual recognition tasks. Solely due to our extremely deep representations, we obtain a 28 % relative improvement on the COCO object detection dataset. Deep residual nets are foundations of our submissions to ILSVRC & COCO 2015 competitions $^1$ , where we also won the 1st places on the tasks of ImageNet detection, ImageNet localization, COCO detection, and COCO segmentation.",
"tags": ["abstract", "residual learning", "deep networks", "imagenet", "cifar-10", "coco", "competition results"]
},
{
"section_title": "Introduction - Deep Networks Background",
"content": "Deep convolutional neural networks [22, 21] have led to a series of breakthroughs for image classification [21, 49, 39] . Deep networks naturally integrate low/mid/highlevel features [49] and classifiers in an end-to-end multilayer fashion, and the \" levels \" of features can be enriched by the number of stacked layers (depth). Recent evidence [40, 43] reveals that network depth is of crucial importance, and the leading results [40, 43, 12, 16] on the challenging ImageNet dataset [35] all exploit \" very deep \" [40] models, with a depth of sixteen [40] to thirty [16] . Many other nontrivial visual recognition tasks [7, 11, 6, 32, 27] have also greatly benefited from very deep models.",
"tags": ["introduction", "deep learning", "convolutional neural networks", "feature hierarchy", "network depth", "imagenet"]
},
{
"section_title": "Problem Statement - Depth vs Performance",
"content": "Driven by the significance of depth, a question arises: Is learning better networks as easy as stacking more layers? An obstacle to answering this question was the notorious problem of vanishing/exploding gradients [14, 1, 8] , which hamper convergence from the beginning. This problem, however, has been largely addressed by normalized initialization [23, 8, 36, 12] and intermediate normalization layers [16] , which enable networks with tens of layers to start converging for stochastic gradient descent (SGD) with backpropagation [22] .",
"tags": ["problem statement", "vanishing gradients", "exploding gradients", "normalization", "sgd", "backpropagation"]
},
{
"section_title": "Degradation Problem",
"content": "When deeper networks are able to start converging, a degradation problem has been exposed: with the network depth increasing, accuracy gets saturated (which might be unsurprising) and then degrades rapidly. Unexpectedly, such degradation is not caused by overfitting , and adding more layers to a suitably deep model leads to higher training error , as reported in [10, 41] and thoroughly verified by our experiments. Fig. 1 shows a typical example.",
"tags": ["degradation problem", "training error", "overfitting", "network depth", "optimization difficulty"]
},
{
"section_title": "Figure 1 Description",
"content": "Figure 1. Training error (left) and test error (right) on CIFAR-10 with 20-layer and 56-layer \"plain\" networks. The deeper network has higher training error, and thus test error. Similar phenomena on ImageNet is presented in Fig. 4 .",
"tags": ["figure", "cifar-10", "training error", "test error", "plain networks", "experimental results"]
},
{
"section_title": "Theoretical Foundation for Residual Learning",
"content": "The degradation (of training accuracy) indicates that no all systems are similarly easy to optimize. Let us consider a shallower architecture and its deeper counterpart that adds more layers onto it. There exists a solution by construction to the deeper model: the added layers are identity mapping, and the other layers are copied from the learned shallower model. The existence of this constructed solution indicates that a deeper model should produce no higher training error than its shallower counterpart. But experiments show that our current solvers on hand are unable to find solutions that are comparably good or better than the constructed solution (or unable to do so in feasible time).",
"tags": ["theoretical foundation", "identity mapping", "optimization theory", "solver limitations", "construction proof"]
},
{
"section_title": "Residual Learning Framework",
"content": "In this paper, we address the degradation problem by introducing a deep residual learning framework. Instead of hoping each few stacked layers directly fit a desired underlying mapping, we explicitly let these layers fit a residual mapping. Formally, denoting the desired underlying mapping as $\\mathcal{H}(\\mathbf{x})$ , we let the stacked nonlinear layers fit another mapping of $\\mathcal{F}(\\mathbf{x}):=\\mathcal{H}(\\mathbf{x})-\\mathbf{x}$ . The original mapping is recast into $\\mathcal{F}(\\mathbf{x})+\\mathbf{x}$ . We hypothesize that it is easier to optimize the residual mapping than to optimize the original, unreferenced mapping. To the extreme, if an identity mapping were optimal, it would be easier to push the residual to zero than to fit an identity mapping by a stack of nonlinear layers.",
"tags": ["residual learning", "mathematical formulation", "optimization hypothesis", "identity mapping", "residual mapping"]
},
{
"section_title": "Shortcut Connections Implementation",
"content": "The formulation of $\\mathcal{F}(\\mathbf{x}) + \\mathbf{x}$ can be realized by feedforward neural networks with \" shortcut connections \" (Fig. 2 ). Shortcut connections [2, 33, 48] are those skipping one or more layers. In our case, the shortcut connections simply perform identity mapping, and their outputs are added to the outputs of the stacked layers (Fig. 2 ). Identity shortcut connections add neither extra parameter nor computational complexity. The entire network can still be trained end-to-end by SGD with backpropagation, and can be easily implemented using common libraries ( e.g. , Caffe [19] ) without modifying the solvers.",
"tags": ["shortcut connections", "implementation", "feedforward networks", "identity mapping", "computational complexity", "caffe", "sgd"]
},
{
"section_title": "Figure 2 Description",
"content": "Figure 2. Residual learning: a building block.",
"tags": ["figure", "residual learning", "building block", "architecture diagram"]
},
{
"section_title": "Experimental Overview",
"content": "We present comprehensive experiments on ImageNet [35] to show the degradation problem and evaluate our method. We show that: 1) Our extremely deep residual nets are easy to optimize, but the counterpart \" plain \" nets (that simply stack layers) exhibit higher training error when the depth increases; 2) Our deep residual nets can easily enjoy accuracy gains from greatly increased depth, producing results substantially better than previous networks. Similar phenomena are also shown on the CIFAR-10 set [20] , suggesting that the optimization difficulties and the effects of our method are not just akin to a particular dataset.",
"tags": ["experimental overview", "imagenet", "cifar-10", "optimization", "accuracy gains", "plain networks", "residual networks"]
}
]